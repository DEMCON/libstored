{#
vim:filetype=cpp

/*
 * libstored, a Store for Embedded Debugger.
 * Copyright (C) 2020  Jochem Rutgers
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */
-#}

#include "{{store.name}}.h"

#include <cstring>

namespace stored {

{% if store.buffer.init|len > 0 %}
static unsigned char const {{store.name}}Data_bufferinit[{{store.buffer.init|len}}] = {
{{store.buffer.init|carray}}
};

{% endif %}
{{store.name}}Data::{{store.name}}Data()
    : buffer()
{
{% if store.buffer.init|len > 0 %}
    memcpy(buffer, {{store.name}}Data_bufferinit, sizeof({{store.name}}Data_bufferinit));
{% endif %}
}

static uint8_t const {{store.name}}Data_directory_full[{{store.directory.longdata|len}}] = {
{{store.directory.longdata|carray}}
};

static uint8_t const {{store.name}}Data_directory[{{store.directory.data|len}}] = {
{{store.directory.data|carray}}
};

uint8_t const* {{store.name}}Data::longDirectory() {
    return Config::FullNames ? (uint8_t const*){{store.name}}Data_directory_full : (uint8_t const*){{store.name}}Data_directory;
}

uint8_t const* {{store.name}}Data::shortDirectory() {
    return (uint8_t const*){{store.name}}Data_directory;
}

} // namespace stored

