{#
vim:filetype=cpp
-#}

#include "{{store.name}}.h"

#include <cstring>

namespace stored {

{% if store.buffer.init|len > 0 %}
static unsigned char const {{store.name}}Data_bufferinit[{{store.buffer.init|len}}] = {
{{store.buffer.init|carray}}
};

{% endif %}
{{store.name}}Data::{{store.name}}Data()
    : buffer()
{
{% if store.buffer.init|len > 0 %}
    memcpy(buffer, {{store.name}}Data_bufferinit, sizeof({{store.name}}Data_bufferinit));
{% endif %}
}

static uint8_t const {{store.name}}Data_directory_full[{{store.directory.longdata|len}}] = {
{{store.directory.longdata|carray}}
};

static uint8_t const {{store.name}}Data_directory[{{store.directory.data|len}}] = {
{{store.directory.data|carray}}
};

uint8_t const* {{store.name}}Data::longDirectory() {
    return Config::FullNames ? (uint8_t const*){{store.name}}Data_directory_full : (uint8_t const*){{store.name}}Data_directory;
}

uint8_t const* {{store.name}}Data::shortDirectory() {
    return (uint8_t const*){{store.name}}Data_directory;
}

} // namespace stored

