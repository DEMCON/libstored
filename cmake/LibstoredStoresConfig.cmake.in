@PACKAGE_INIT@

if(NOT TARGET libzmq)
	if(WIN32)
		include(${CMAKE_CURRENT_LIST_DIR}/../../CMake/ZeroMQTargets.cmake OPTIONAL RESULT_VARIABLE _zmq)
	else()
		include(${CMAKE_CURRENT_LIST_DIR}/../ZeroMQ/ZeroMQTargets.cmake OPTIONAL RESULT_VARIABLE _zmq)
	endif()

	if(_zmq STREQUAL "NOTFOUND" AND NOT CMAKE_CROSSCOMPILING)
		# Win32 always builds from source. In case the include file was not found, we are on Linux or macOS,
		# which may have it installed on the system. This scan be found using pkg_config. Try that.
		set(_zmq "@ZeroMQ_LINK_LIBRARIES@")
		if(_zmq)
			add_library(libzmq SHARED IMPORTED GLOBAL)
			set_property(TARGET libzmq PROPERTY IMPORTED_LOCATION @ZeroMQ_LINK_LIBRARIES@)
			set_property(TARGET libzmq PROPERTY INTERFACE_INCLUDE_DIRECTORIES @ZeroMQ_INCLUDE_DIRS@)
			set_property(TARGET libzmq PROPERTY INTERFACE_COMPILE_OPTIONS @ZeroMQ_CFLAGS@)
			target_link_libraries(libzmq INTERFACE @ZeroMQ_LDFLAGS@)
		endif()
	endif()
endif()

include(${CMAKE_CURRENT_LIST_DIR}/../../libstored/cmake/libstored.cmake)

file(GLOB _stores ${CMAKE_CURRENT_LIST_DIR}/../../libstored/cmake/*Store.cmake)
foreach(f IN LISTS _stores)
	include(${f})
endforeach()

check_required_components(LibstoredStores)
