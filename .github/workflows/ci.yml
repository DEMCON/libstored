name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-ubuntu:
    strategy:
      fail-fast: false
      matrix:
        gcc: [9, 10]
        cxx: [C++03, C++11, C++14, C++17]
        zmq: [zmq, nozmq]
    runs-on: ubuntu-latest
    env:
      CC: gcc-${{matrix.gcc}}
      CXX: g++-${{matrix.gcc}}
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: bootstrap
        run: |
          dist/ubuntu/bootstrap.sh
          sudo apt install clang-tidy clang libegl1
      - name: build Debug
        run: dist/ubuntu/build.sh Debug dev ${{matrix.cxx}} ${{matrix.zmq}} test
      - name: build Release
        run: |
          rm -rf dist/ubuntu/build
          dist/ubuntu/build.sh Release ${{matrix.cxx}} ${{matrix.zmq}} test

  build-ubuntu-prev:
    runs-on: ubuntu-18.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: bootstrap
        run: |
          dist/ubuntu/bootstrap.sh
          sudo apt install clang-tidy clang libegl1
      - name: build Debug
        run: dist/ubuntu/build.sh Debug dev test
      - name: build Release
        run: |
          rm -rf dist/ubuntu/build
          dist/ubuntu/build.sh Release test

  build-windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        compiler: [msvc, gcc]
        cxx: [C++03, C++11, C++14, C++17]
        zmq: [zmq, nozmq]
        exclude:
          - compiler: msvc
            cxx: C++03
          - compiler: msvc
            cxx: C++11
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: bootstrap
        run: dist\win32\bootstrap.cmd
      - name: build Debug
        run: dist\win32\build.cmd Debug dev ${{matrix.compiler}} ${{matrix.cxx}} ${{matrix.zmq}} test
      - name: build Release
        run: |
          Remove-Item -path dist\win32\build -recurse -force
          dist\win32\build.cmd Release ${{matrix.compiler}} ${{matrix.cxx}} ${{matrix.zmq}} test

  build-mac:
    runs-on: macos-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: bootstrap
        run: dist/macos/bootstrap.sh
      - name: build Debug
        run: dist/macos/build.sh Debug dev test
      - name: build Release
        run: |
          rm -rf dist/macos/build
          dist/macos/build.sh Release test

  build-mingw:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: bootstrap
        run: |
          dist/mingw/bootstrap.sh
          sudo apt install libegl1
      - name: build Debug
        run: dist/mingw/build.sh Debug dev
      - name: build Release
        run: |
          rm -rf dist/mingw/build
          dist/mingw/build.sh Release

  # Dummy job that depends on all other build-* jobs.
  build-all:
    needs: [build-ubuntu, build-ubuntu-prev, build-windows, build-mac, build-mingw]
    runs-on: ubuntu-latest

  # If everything is OK, publish documentation
  documentation:
    if: github.ref == 'refs/heads/master'
    needs: [build-ubuntu, build-ubuntu-prev, build-windows, build-mac, build-mingw]
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: bootstrap
        run: |
          dist/ubuntu/bootstrap.sh
          sudo apt install libegl1
      - name: build
        run: dist/ubuntu/build.sh -DLIBSTORED_DOCUMENTATION=ON -DLIBSTORED_PYLIBSTORED=ON
      - name: deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./sphinx/_build/html
