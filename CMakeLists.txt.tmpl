{#
# vim:filetype=cmake
#
# libstored, distributed debuggable data stores.
# Copyright (C) 2020-2022  Jochem Rutgers
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.
-#}

cmake_minimum_required(VERSION 3.1)
project({{libprefix}}libstored)
cmake_policy(VERSION 3.1)

option(LIBSTORED_INSTALL_STORE_LIBS "Install generated static libstored libraries" ON)
option(LIBSTORED_DRAFT_API "Enable draft API" OFF)
option(LIBSTORED_ENABLE_ASAN "Build with Address Sanitizer" OFF)
option(LIBSTORED_ENABLE_LSAN "Build with Leak Sanitizer" OFF)
option(LIBSTORED_ENABLE_UBSAN "Build with Undefined Behavior Sanitizer" OFF)
option(LIBSTORED_HAVE_HEATSHRINK "Use heatshrink" ON)
option(LIBSTORED_HAVE_LIBZMQ "Use libzmq" ON)
option(LIBSTORED_HAVE_ZTH "Use Zth" OFF)
option(LIBSTORED_HAVE_QT "Use Qt" OFF)
option(LIBSTORED_CLANG_TIDY "Run clang-tidy" OFF)
option(LIBSTORED_DOCUMENTATION "Create the HTML based API documentation" OFF)
option(LIBSTORED_DISABLE_EXCEPTIONS "Disable exception support" OFF)
option(LIBSTORED_DISABLE_RTTI "Disable run-time type information support" OFF)

set(PYTHON_EXECUTABLE "{{python_executable|escapebs}}")

file(TO_CMAKE_PATH "{{libstored_dir|escapebs}}" LIBSTORED_SOURCE_DIR)
list(APPEND CMAKE_MODULE_PATH ${LIBSTORED_SOURCE_DIR}/cmake)
include(libstored)
libstored_lib({{libprefix}} ${CMAKE_CURRENT_SOURCE_DIR}{% for m in models %} {{m}}{% endfor %})
