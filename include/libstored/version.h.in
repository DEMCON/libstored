#ifndef LIBSTORED_VERSION_H
#define LIBSTORED_VERSION_H
/*
 * libstored, distributed debuggable data stores.
 * Copyright (C) 2020-2022  Jochem Rutgers
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

#include <libstored/util.h>

// clang-format off
#define STORED_VERSION_MAJOR  @LIBSTORED_VERSION_MAJOR@
#define STORED_VERSION_MINOR  @LIBSTORED_VERSION_MINOR@
#define STORED_VERSION_PATCH  @LIBSTORED_VERSION_PATCH@
#define STORED_VERSION_SUFFIX "@LIBSTORED_VERSION_SUFFIX@"

#define STORED_VERSION                             \
	STORED_STRINGIFY(STORED_VERSION_MAJOR)     \
	"." STORED_STRINGIFY(STORED_VERSION_MINOR) \
	"." STORED_STRINGIFY(STORED_VERSION_PATCH) \
	    STORED_VERSION_SUFFIX

#define STORED_VERSION_NUM \
	(STORED_VERSION_MAJOR * 10000L + STORED_VERSION_MINOR * 100L + STORED_VERSION_PATCH)
// clang-format on

#ifdef __cplusplus
namespace stored {
/*!
 * \brief Returns the version of libstored.
 */
constexpr char const* version() noexcept
{
	return STORED_VERSION;
}
} // namespace stored
#endif // __cplusplus
#endif // LIBSTORED_VERSION_H
